description:
  repo: TD
  project_name: global
  experiment_name: 0505_tversky_5think_640size

tensorboard: # если не требуется, то просто убираем этот блок
  # Папка куда буду складываться логи тензорборда
  log_dir: logs/${description.repo}/${description.project_name}/${description.experiment_name}

logging:
  image:
    height: 224
    width: 224
  log_images_every_n_epoch: 5

data:
  datasets:
    cism:
      images_folder: /home/addudkin/cism/data/source_data/all_images
      annotation_folder: /home/addudkin/cism/data
      p: 1.0
  mean: [0.485, 0.456, 0.406]
  std: [0.229, 0.224, 0.225]

train:
  epoch: 1000
  crop_size: [1024, 1024]
  batch_size: 16
  workers: 8
  pin_memory: True
  gpu_index: 1
  ddp_backend: NCCL # GLOO, MPI, TCP, NCCL

val:
  batch_size: 16

checkpoint:
  # Количество отслеживаемых лучших checkpoints для дальнейшего усреднения
  average_top_k: 5

# Имя класса используемого датасета из datasets/__init__.py
dataset_name: LineSeg
model: # параметры модели из фреймворка segmentation_models_pytorch
  # Тип модели
  class_model: Unet # Unet, UnetPlusPlus, DeepLabV3, DeepLabV3Plus, Linknet, FPN, PSPNet, PAN
  hparams:
    classes: 2
    # Название энкодера
    encoder_name: timm-mobilenetv3_large_100
    # Инициализация энкодера обученными весами на датасете imagenet
    encoder_weights: null # imagenet
    # Функция активации на входе сети
    activation: identity
    # Глубина энкодера
    encoder_depth: 4
    # Количество каналов после каждой стадии
    decoder_channels: [ 128, 64, 32, 16 ]
    # Количество каналов у входного тензора (изображения)
    in_channels: 3
    # Тип этэншена
    decoder_attention_type: null # scse
    #
    decoder_use_batchnorm: true # false

#model: # параметры модели из фреймворка segmentation_models_pytorch
#  # Тип модели
#  class_model: DeepLabV3Plus # Unet, UnetPlusPlus, DeepLabV3, DeepLabV3Plus, Linknet, FPN, PSPNet, PAN
#  hparams:
#    classes: 2
#    # Название энкодера
#    encoder_name: timm-mobilenetv3_large_100
#    # Инициализация энкодера обученными весами на датасете imagenet
#    encoder_weights: imagenet
#    # Функция активации на входе сети
##    activation: identity
##    # Глубина энкодера
##    encoder_depth: 4
##    # Количество каналов после каждой стадии
##    decoder_channels: [ 128, 64, 32, 16 ]
##    # Количество каналов у входного тензора (изображения)
##    in_channels: 3
#    # Тип этэншена
##    decoder_attention_type: null # scse
##    #
##    decoder_use_batchnorm: true # false

training_type: &training_type multilabel

loss_function:
  type: MultiLoss
  params:
    loss_1:
      name: FocalLoss
      weight: 1
      param:
        reduction: mean
        mode: *training_type
    loss_2:
      name: TverskyLoss
      weight: 1
      param:
        alpha: 0.5
        beta: 0.5
        mode: *training_type

optimizer:
  type: AdamW
  params:
    lr: 0.001
    weight_decay: 0.0005

scheduler:
  # Имя класса
  type: CosineAnnealingLR
  # Передаваемые параметры
  params:
    T_max: ${train.epoch}
    eta_min: 0


border_creator:
  params:
    shrink_ratio: 0.4
    thresh_min: 0.3
    thresh_max: 0.7

mask_shrinker:
  params:
    shrink_ratio: 0.4
    min_text_size: 8
    shrink_type: 'pyclipper'

post_processor:
  params:
    unclip_ratio: 2.25
    binarization_threshold: 0.3
    confidence_threshold: 0.7
    min_area: 10.

train_transforms:
  - ColorJitter:
      p: 0.5
      brightness: 0.12
      saturation: 0.5
  - HorizontalFlip:
      p: 0.5
  - ShiftScaleRotate:
      rotate_limit: 30
      border_mode: 0
      interpolation: 2
      p: 0.5

train_pre_transforms:
    OneOf:
      p: 0.5
      args:
        - DirtyDrumTransform:
            p: 1.0
        - LightingGradientTransform:
            p: 1.0
        - BadPhotoCopyTransform:
            p: 1.0
            noise_iteration: [ 1, 1 ]
            noise_value: [ 32, 64 ]

val_pre_transforms: null

val_transforms: null

test_transforms: null
